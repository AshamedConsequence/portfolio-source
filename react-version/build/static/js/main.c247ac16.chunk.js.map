{"version":3,"sources":["utils/NavBar.tsx","App.tsx","serviceWorker.ts","About.tsx","Certs.tsx","Knowledge.tsx","index.tsx"],"names":["NavBar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","App","src","alt","loading","href","React","Component","Boolean","window","location","hostname","match","age","Date","getFullYear","About","Certs","Knowledge","ReactDOM","render","StrictMode","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c247ac16.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-light navbar-expand-lg\">\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        {\" \"}\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link active\" to=\"/\">\n            Home <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link className=\"nav-item nav-link\" to=\"/about\">\n            About Me\n          </Link>\n          <Link className=\"nav-item nav-link\" to=\"/knowledge\">\n            My Knowledge\n          </Link>\n          <Link className=\"nav-item nav-link\" to=\"/certs\">\n            Badges/Certifications\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./utils/NavBar\";\n\nexport default class App extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavBar />\n          <img\n            src=\"https://avatars2.githubusercontent.com/u/45473363?s=460&u=76fc783175bccafd8c99abdf1d69cb86a6002372&v=4\"\n            className=\"App-logo\"\n            alt=\"logo\"\n            loading=\"lazy\"\n          />\n          <br></br>\n          <h1>\n            <i>Tarek Ali (DGKSK8LIFE)</i>\n          </h1>\n          <footer className=\"frontpage_footer\">\n            <a href=\"https://github.com/DGKSK8LIFE/\">\n              <img src=\"icons8-github.svg\" className=\"github\"></img>\n            </a>\n            &nbsp; &nbsp; &nbsp;\n            <a href=\"mailto:tarekali15@outlook.com\">\n              <img src=\"interface.svg\" className=\"mail\"></img>\n            </a>\n            &nbsp; &nbsp; &nbsp;\n            <a href=\"https://twitter.com/TarekAl62101525\">\n              <img src=\"twitter.svg\" className=\"twitter\"></img>\n            </a>\n          </footer>\n        </header>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./utils/NavBar\";\n\nlet year = new Date();\nlet age: number = year.getFullYear() - 2006; // 2005 is my actual birthyear but there's always an offset when you're born in December\n\nexport default class About extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavBar />\n          <h1>\n            <i>About</i>\n          </h1>\n          <p className=\"about-block\">\n            I'm very interested in{\" \"}\n            <strong>\n              server-side development, webservices, relational datastructures,\n              informational security, devops, and more!\n            </strong>\n            . I participate in Vex and FRC Robotics (team{\" \"}\n            <strong>6785M and 5829</strong>). I love creating and contributing\n            to open source software; if you need any help or a contributor, hit\n            me up. I'm {age}; currently living in Houston, TX. For more\n            information about my computer science knowledge,{\" \"}\n            <a\n              href=\"https://github.com/DGKSK8LIFE/WIKNWINTL/blob/master/README.md\"\n              className=\"wiknwintl\"\n            >\n              Click Here.\n            </a>{\" \"}\n            I am a native English speaker, and am fluent in French. Arabic is my\n            third language; I am literate in it but definitely need some\n            improvement. I am also learning Russian (self-taught).\n          </p>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./utils/NavBar\";\n\nexport default class Certs extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavBar />\n          <h1>\n            <i>Badges/Certifications</i>\n          </h1>\n          <br />\n          <div className=\"card\">\n            <div className=\"container\">\n              <img\n                src=\"https://www.awseducate.com/mstudent/resource/Minor_Badge_Icons/BuilderBadgeComplete.png\"\n                alt=\"AWS educate Cloud Builder Badge\"\n              ></img>\n            </div>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./utils/NavBar\";\n\nexport default class Knowledge extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavBar />\n          <h1>\n            <i>Knowledge</i>\n          </h1>\n          <div className=\"Knowledge-headers\">\n            <a\n              className=\"wiknwintl\"\n              href=\"https://github.com/DGKSK8LIFE/WIKNWINTL\"\n            >\n              <p>For more info, click here.</p>\n            </a>\n            <h3>Backend</h3>\n            <ul>\n              <li>Go</li>\n              <li>Python</li>\n              <li>Node/Typescript</li>\n              <li>Java</li>\n              <li>Flask</li>\n              <li>Revel framework</li>\n              <li>Gin</li>\n              <li>Express.JS</li>\n              <li>C</li>\n              <li>GraphQL</li>\n              <li>REST</li>\n              <li>JWT</li>\n              <li>Session Auth</li>\n              <li>C#</li>\n              <li>System Design</li>\n            </ul>\n            <h3>Frontend</h3>\n            <ul>\n              <li>HTML</li>\n              <li>CSS</li>\n              <li>Javascript/Typescript</li>\n              <li>React</li>\n              <li>Next.JS</li>\n              <li>Wordpress</li>\n              <li>Scss</li>\n              <li>Bootstrap</li>\n              <li>React-Native</li>\n            </ul>\n            <h3>Database technologies</h3>\n            <ul>\n              <li>MySQL</li>\n              <li>Sqlite</li>\n              <li>Redis</li>\n            </ul>\n            <h3>DevOps</h3>\n            <ul>\n              <li>Docker</li>\n              <li>Docker-Compose</li>\n              <li>Bash</li>\n              <li>Linux</li>\n              <li>Github Actions</li>\n              <li>Git/Github</li>\n            </ul>\n            <h3>Cloud</h3>\n            <ul>\n              <li>GCP</li>\n              <li>Netlify</li>\n            </ul>\n            <h3>Hardware</h3>\n            <ul>\n              <li>RaspberryPI</li>\n              <li>Arduino</li>\n              <li>Sunfounder Sensor Kit</li>\n              <li>Computer Hardware</li>\n              <li>Building PC</li>\n            </ul>\n            <h3>Cybersecurity</h3>\n            <ul>\n              <li>TryHackMe!</li>\n              <li>Nmap</li>\n              <li>Wireshark</li>\n              <li>Malduino</li>\n              <li>InfoSec</li>\n            </ul>\n            <h3>Other software</h3>\n            <ul>\n              <li>Office 365 Suite</li>\n              <li>Adobe Creative Cloud Suite</li>\n              <li>Unity Game Engine</li>\n              <li>Blender</li>\n              <li>OnShape</li>\n            </ul>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport About from \"./About\";\nimport Certs from \"./Certs\";\nimport Knowledge from \"./Knowledge\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/certs\">\n          <Certs />\n        </Route>\n        <Route exact path=\"/knowledge\">\n          <Knowledge />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}